import{S as h,i as d,s as g,e as G,c as I,a as P,d as w,b as u,g as q,K as L,n as f,L as N,w as O,x as b,y as v,z as S,r as D,p as x,C}from"../chunks/index-a8a211d8.js";import{_ as V}from"../chunks/preload-helper-7054b5b2.js";function p(r){let e,s,t;return{c(){e=G("div"),this.h()},l(n){e=I(n,"DIV",{style:!0,class:!0}),P(e).forEach(w),this.h()},h(){u(e,"style",r[0]),u(e,"class","m-0")},m(n,i){q(n,e,i),s||(t=L(r[1].call(null,e)),s=!0)},p(n,[i]){i&1&&u(e,"style",n[0])},i:f,o:f,d(n){n&&w(e),s=!1,t()}}}function z(r,e){return e.forEach(([s,t])=>r[s]=t),r}function F(r,e,s){let{target:t=void 0}=e,{sketch:n=void 0}=e,{parentDivStyle:i="display: block;"}=e,{debug:o=!1}=e,l;const m=N(),_={ref(){m("ref",t)},instance(){m("instance",l)}};function E(c){return s(2,t=c),{destroy(){s(2,t=void 0)}}}return O(async()=>{const c=await V(()=>import("../chunks/p5.min-21ab2ccd.js").then(function(a){return a.p}),[]),{default:j}=c,k=Object.entries(c).filter(([a,A])=>A instanceof Function&&a[0]!=="_"&&a!=="default");o&&console.log("available p5 native classes",k),l=new j(a=>(a=z(a,k),o&&console.log("p5 instance",a),window._p5Instance=a,n(a)),t),_.ref(),_.instance()}),r.$$set=c=>{"target"in c&&s(2,t=c.target),"sketch"in c&&s(3,n=c.sketch),"parentDivStyle"in c&&s(0,i=c.parentDivStyle),"debug"in c&&s(4,o=c.debug)},[i,E,t,n,o]}class H extends h{constructor(e){super(),d(this,e,F,p,g,{target:2,sketch:3,parentDivStyle:0,debug:4})}}function K(r){let e,s;return e=new H({props:{sketch:r[0]}}),{c(){b(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,n){S(e,t,n),s=!0},p:f,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){x(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function M(r,e,s){let{config:t}=e,{makeSketch:n}=e;const i=o=>{const l=n(o);o.setup=()=>{l.setup(t)},o.draw=()=>{l.draw(t)}};return r.$$set=o=>{"config"in o&&s(1,t=o.config),"makeSketch"in o&&s(2,n=o.makeSketch)},[i,t,n]}class R extends h{constructor(e){super(),d(this,e,M,K,g,{config:1,makeSketch:2})}}const y=(r,e)=>Array.from({length:r},()=>Array.from({length:e})),T=r=>({grid:null,cols:0,rows:0,resolution:20,setup({canvasWidth:e,canvasHeight:s}){r.createCanvas(e,s),r.background(255),this.cols=r.width/this.resolution,this.rows=r.height/this.resolution,this.grid=y(this.cols,this.rows);for(let t=0;t<this.cols;t++)for(let n=0;n<this.rows;n++)this.grid[t][n]=r.floor(r.random(2))},draw(){const e=y(this.cols,this.rows);for(let s=0;s<this.cols;s++)for(let t=0;t<this.rows;t++){r.stroke(217,67,77),r.fill(this.grid[s][t]?[255,50]:[217,67,77,50]),r.square(s*this.resolution,t*this.resolution,this.resolution);const n=this.countNeighbors(s,t),i=this.grid[s][t]===1;!i&&n===3?e[s][t]=1:i&&(n<2||n>3)?e[s][t]=0:e[s][t]=this.grid[s][t]}this.grid=e},countNeighbors(e,s){let t=0;for(let n=-1;n<2;n++)for(let i=-1;i<2;i++){const o=(e+n+this.cols)%this.cols,l=(s+i+this.rows)%this.rows;t+=this.grid[o][l]}return t-=this.grid[e][s],t}});function W(r){let e,s;return e=new R({props:{config:r[0],makeSketch:T}}),{c(){b(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,n){S(e,t,n),s=!0},p:f,i(t){s||(D(e.$$.fragment,t),s=!0)},o(t){x(e.$$.fragment,t),s=!1},d(t){C(e,t)}}}function B(r){return[{canvasWidth:1080,canvasHeight:1920}]}class X extends h{constructor(e){super(),d(this,e,B,W,g,{})}}export{X as default};
