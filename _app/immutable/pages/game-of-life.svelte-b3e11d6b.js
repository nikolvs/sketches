import{S as u,i as d,s as m,e as G,c as I,a as P,d as k,b as f,g as q,K as L,n as h,L as N,w as O,x as y,y as b,z as S,r as C,p as D,C as x}from"../chunks/index-a8a211d8.js";import{_ as V}from"../chunks/preload-helper-7054b5b2.js";function z(s){let t,n,e;return{c(){t=G("div"),this.h()},l(o){t=I(o,"DIV",{style:!0,class:!0}),P(t).forEach(k),this.h()},h(){f(t,"style",s[0]),f(t,"class","m-0")},m(o,r){q(o,t,r),n||(e=L(s[1].call(null,t)),n=!0)},p(o,[r]){r&1&&f(t,"style",o[0])},i:h,o:h,d(o){o&&k(t),n=!1,e()}}}function F(s,t){return t.forEach(([n,e])=>s[n]=e),s}function H(s,t,n){let{target:e=void 0}=t,{sketch:o=void 0}=t,{parentDivStyle:r="display: block;"}=t,{debug:i=!1}=t,l;const g=N(),_={ref(){g("ref",e)},instance(){g("instance",l)}};function A(a){return n(2,e=a),{destroy(){n(2,e=void 0)}}}return O(async()=>{const a=await V(()=>import("../chunks/p5.min-21ab2ccd.js").then(function(c){return c.p}),[]),{default:E}=a,w=Object.entries(a).filter(([c,j])=>j instanceof Function&&c[0]!=="_"&&c!=="default");i&&console.log("available p5 native classes",w),l=new E(c=>(c=F(c,w),i&&console.log("p5 instance",c),window._p5Instance=c,o(c)),e),_.ref(),_.instance()}),s.$$set=a=>{"target"in a&&n(2,e=a.target),"sketch"in a&&n(3,o=a.sketch),"parentDivStyle"in a&&n(0,r=a.parentDivStyle),"debug"in a&&n(4,i=a.debug)},[r,A,e,o,i]}class K extends u{constructor(t){super(),d(this,t,H,z,m,{target:2,sketch:3,parentDivStyle:0,debug:4})}}function M(s){let t,n;return t=new K({props:{sketch:s[0]}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,o){S(t,e,o),n=!0},p:h,i(e){n||(C(t.$$.fragment,e),n=!0)},o(e){D(t.$$.fragment,e),n=!1},d(e){x(t,e)}}}function R(s,t,n){let{config:e}=t,{makeSketch:o}=t;const r=i=>{const l=o(i);i.setup=()=>{l.setup(e)},i.draw=()=>{l.draw(e)}};return s.$$set=i=>{"config"in i&&n(1,e=i.config),"makeSketch"in i&&n(2,o=i.makeSketch)},[r,e,o]}class T extends u{constructor(t){super(),d(this,t,R,M,m,{config:1,makeSketch:2})}}const v=(s,t)=>Array.from({length:s},()=>Array.from({length:t})),W=s=>({grid:null,cols:0,rows:0,resolution:40,colors:{alive:[240,70],dead:[217,67,77,10]},chaos:{alive:10,dead:40},setup({canvasWidth:t,canvasHeight:n}){s.createCanvas(t,n),s.background(240),this.cols=s.ceil(s.width/this.resolution),this.rows=s.ceil(s.height/this.resolution),this.grid=v(this.cols,this.rows);for(let e=0;e<this.cols;e++)for(let o=0;o<this.rows;o++)this.grid[e][o]=s.floor(s.random(2))},draw(){const t=v(this.cols,this.rows);s.noStroke();for(let n=0;n<this.cols;n++)for(let e=0;e<this.rows;e++){const o=this.grid[n][e],r=this.countNeighbors(n,e);o?this.drawAliveCell(n,e):this.drawDeadCell(n,e),!o&&r===3?t[n][e]=1:o&&(r<2||r>3)?t[n][e]=0:t[n][e]=o,this.colors.dead[0]=s.floor(s.random(135,255))}this.grid=t},drawAliveCell(t,n){s.fill(this.colors.alive),s.square(t*this.resolution-s.floor(s.random(this.chaos.alive)),n*this.resolution-s.floor(s.random(this.chaos.alive)),this.resolution)},drawDeadCell(t,n){const e=t*this.resolution+this.resolution/2,o=n*this.resolution+this.resolution/2;s.fill(this.colors.dead),s.circle(e+s.floor(s.random(this.chaos.dead))*(s.random([0,1])?-1:1),o+s.floor(s.random(this.chaos.dead))*(s.random([0,1])?-1:1),this.resolution)},countNeighbors(t,n){let e=0;for(let o=-1;o<2;o++)for(let r=-1;r<2;r++){const i=(t+o+this.cols)%this.cols,l=(n+r+this.rows)%this.rows;e+=this.grid[i][l]}return e-=this.grid[t][n],e}});function X(s){let t,n;return t=new T({props:{config:s[0],makeSketch:W}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,o){S(t,e,o),n=!0},p:h,i(e){n||(C(t.$$.fragment,e),n=!0)},o(e){D(t.$$.fragment,e),n=!1},d(e){x(t,e)}}}function Y(s){return[{canvasWidth:1080,canvasHeight:1920}]}class U extends u{constructor(t){super(),d(this,t,Y,X,m,{})}}export{U as default};
